plan(1,init, sentence(true,move(print("Robot Mind AI (robot autonomous driving) STARTED")),'','' ))
plan(1,statusNotWorking, sentence(true,move(print("Status Not Working")),'','' ))
plan(2,statusNotWorking, sentence(true,not here StateMoveNormal,'','' ))
plan(3,statusNotWorking, sentence(true,move(solve,retractall( sonar2( X)),0,""),'','' ))
plan(4,statusNotWorking, sentence(true,move(solve,retractall( move( X)),0,""),'','' ))
plan(5,statusNotWorking, sentence(true,move(solve,retractall( moveDone( X)),0,""),'','' ))
plan(6,statusNotWorking, sentence(true,move(solve,retractall( obstacleOnExploringGoal( X)),0,""),'','' ))
plan(7,statusNotWorking, sentence(true,move(solve,retractall( sonar2position( X,Y)),0,""),'','' ))
plan(8,statusNotWorking, sentence(true,move(solve,consult( "./robotRules.pl"),0,""),'','' ))
plan(9,statusNotWorking, sentence(true,move(solve,retractall( statusExploring( X)),0,""),'','' ))
plan(10,statusNotWorking, sentence(true,forward(led, ledCmdOff,ledCmdOff),'','' ))
plan(1,initializingExplore, sentence(true,forward(led, ledCmdOn,ledCmdOn),'','' ))
plan(2,initializingExplore, sentence( timeTurn( T),forward(robot, robotCmd,move( turnLeft,T)),'','' ))
plan(3,initializingExplore, sentence(true,delay( 500) ,'','' ))
plan(4,initializingExplore, sentence( timeTurn( T),forward(robot, robotCmd,move( turnLeft,T)),'','' ))
plan(5,initializingExplore, sentence(true,delay( 500) ,'','' ))
plan(6,initializingExplore, sentence(true,move(solve,assign( curNumExplore,0),0,""),'','' ))
plan(7,initializingExplore, sentence(true,move(solve,assign( nstep,0),0,""),'','' ))
plan(8,initializingExplore, sentence(true,not here StateMoveNormal,'','' ))
plan(9,initializingExplore, sentence(true,notHere SendDispatch,'','' ))
plan(1,statusExploring, sentence( curPos( X,Y,D),move(print(exploreStep( X,Y,D))),'','' ))
plan(2,statusExploring, sentence(true,not here StateMoveNormal,'','' ))
plan(3,statusExploring, sentence( inc( curNumExplore,1,E),not here StateMoveNormal,'','' ))
plan(4,statusExploring, sentence(true,not here StateMoveNormal,'','' ))
plan(5,statusExploring, sentence( stopExploring,raise( mindEvent , cmd( ias,ia1,offobstacle) )'),'','' ))
plan(1,doActions, sentence( move( M),move(print(doActions_doingTheMove( M))),'','' ))
plan(2,doActions, sentence(not  move( M),notHere SendDispatch,'','' ))
plan(3,doActions, sentence(true,removeRule( moveDone( _) ),'','' ))
plan(4,doActions, sentence(true,not here  GuardMove,'','' ))
plan(5,doActions, sentence( doTheMove( a),not here StateMoveNormal,'','' ))
plan(6,doActions, sentence( doTheMove( d),not here StateMoveNormal,'','' ))
plan(7,doActions, sentence( doTheMove( w),not here StateMoveNormal,'','' ))
plan(8,doActions, sentence(true,not here StateMoveNormal,'','' ))
plan(1,handleSonar, sentence(true,msgswitch(sonarCtrl, cmd( sonar2s,sonar2,detectedbysonar2) , addRule( sonar2( reached) )),'','' ))
plan(2,handleSonar, sentence(true,msgswitch(sonarCtrl, cmd( sonar2s,sonar2,detectedbysonar2) , not here StateMoveNormal),'','' ))
plan(3,handleSonar, sentence(true,msgswitch(sonarCtrl, cmd( sonar2s,sonar2,detectedbysonar2) , move(print("raggiunto sonar 2"))),'','' ))
plan(1,handleMoveForward, sentence(true,not here StateMoveNormal,'','' ))
plan(2,handleMoveForward, sentence( timew( T),forward(robot, robotCmd,move( moveForward,T)),'','' ))
plan(1,forwardOk, sentence(true,not here StateMoveNormal,'','' ))
plan(1,handleObstacle, sentence(true,forward(robot, robotCmd,move( moveForward,0)),'','' ))
plan(2,handleObstacle, sentence(true,not here StateMoveNormal,'','' ))
plan(3,handleObstacle, sentence(true,notHere SendDispatch,'','' ))
plan(1,handleCollision, sentence(true,not here StateMoveNormal,'','' ))
plan(2,handleCollision, sentence(-  moveWDuration( T) ,not here StateMoveNormal,'','' ))
plan(3,handleCollision, sentence( explorableDiagonalGoal,notHere SendDispatch,'','' ))
plan(1,backToHome, sentence( sonar2( reached),not here StateMoveNormal,'','' ))
plan(2,backToHome, sentence(not  sonar2( reached),not here StateMoveNormal,'','' ))
plan(1,exploreUncovered, sentence( noOpGoal( yes),not here StateMoveNormal,'','' ))
plan(2,exploreUncovered, sentence(true,not here StateMoveNormal,'','' ))
plan(3,exploreUncovered, sentence( uncovered( X,Y),not here StateMoveNormal,'','' ))
